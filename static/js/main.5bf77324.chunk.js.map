{"version":3,"sources":["img/selector.png","img/piedra.png","img/papel.png","img/tijera.png","img/lagarto.png","img/spock.png","img/reglas.png","serviceWorker.js","Componentes/Reglas.js","Componentes/Computadora.js","Componentes/Ganador.js","Componentes/Partida.js","Game.js","Componentes/HomePage.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Reglas","src","reglas","className","alt","Computadora","props","img","width","Ganador","Info","winner","player","ia","type","onClick","class","data-toggle","data-target","id","data-dismiss","Partida","opciones","imagenes","piedra","papel","tijera","lagarto","spock","state","cpu","selector","ganador","resultado","e","Math","floor","random","c","this","setState","calcularGanador","React","Component","Game","jugador","computadora","imagen","opcion","handleClick","HomePage","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5bf77324.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/selector.3c17c8fe.png\";","module.exports = __webpack_public_path__ + \"static/media/piedra.bf49615b.png\";","module.exports = __webpack_public_path__ + \"static/media/papel.32f8d013.png\";","module.exports = __webpack_public_path__ + \"static/media/tijera.7bf9032e.png\";","module.exports = __webpack_public_path__ + \"static/media/lagarto.509ce40e.png\";","module.exports = __webpack_public_path__ + \"static/media/spock.b5243116.png\";","module.exports = __webpack_public_path__ + \"static/media/reglas.75d911ca.png\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport reglas from '../img/reglas.png';\r\n\r\nfunction Reglas(){\r\n    return(\r\n        <div>\r\n            <h3>Combinacion de Jugadas:</h3> \r\n            <img src={reglas} className=\"reglas\" alt=\"reglas\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Reglas;","import React from 'react';\r\n\r\nfunction Computadora(props){\r\n    \r\n    return (\r\n        <div>\r\n            <h3>Computadora</h3>\r\n            <img src={props.img} alt=\"cpuImg\" width=\"20%\"/>\r\n        </div>\r\n    );\r\n} \r\n\r\nexport default Computadora;","import React from 'react';\r\n\r\nfunction Ganador(props){\r\n\r\n    \r\n    const Info = () =>{\r\n        let msj;\r\n        if ( `${props.winner}`  === \"Ganador Jugador!\") {\r\n            msj =  `${props.player} le gana a ${props.ia}`;\r\n        } else if(`${props.winner}` === \"Ganador Computadora...\"){\r\n            msj =  `${props.ia} le gana a ${props.player}`;\r\n        }else{\r\n            msj = \"Sigue intentando...\"\r\n        }\r\n        return msj; \r\n    }\r\n\r\n    return(\r\n        <div >\r\n            \r\n            <button type=\"button\"  onClick={props.onClick} class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal\" >\r\n                Jugar!\r\n            </button>\r\n            <div class=\"modal fade\" id=\"myModal\">\r\n                <div class=\"modal-dialog modal-dialog-centered\">\r\n                    <div class=\"modal-content\">\r\n                        \r\n                    \r\n                        <div class=\"modal-header\">\r\n                            <h4 class=\"modal-title\">{props.winner}</h4>\r\n                        </div>\r\n\r\n                        <div class=\"modal-body\">\r\n                            <Info />\r\n                        </div>\r\n                        \r\n                        <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\">Seguir Jugando</button>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Ganador;","import React  from 'react';\r\nimport selector from '../img/selector.png'\r\nimport piedra from '../img/piedra.png'\r\nimport papel from '../img/papel.png'\r\nimport tijera from '../img/tijera.png'\r\nimport lagarto from '../img/lagarto.png'\r\nimport spock from '../img/spock.png'\r\nimport Computadora from './Computadora';\r\nimport Ganador from './Ganador';\r\n\r\nclass Partida extends React.Component{\r\n        constructor(props){\r\n            super(props);\r\n            this.state ={\r\n                cpu: \"\",\r\n                img: selector,\r\n                ganador: \"\",\r\n            }\r\n        }\r\n    \r\n    opciones = [\"piedra\",\"papel\",\"tijera\",\"lagarto\",\"spock\"];\r\n    imagenes = [piedra,papel,tijera,lagarto,spock];\r\n    \r\n    calcularGanador(){\r\n        let resultado;\r\n        let e = Math.floor(Math.random() * 5);\r\n        let c = this.opciones[e];\r\n        \r\n        switch(this.props.player) {\r\n            case \"piedra\":\r\n                            if(c === \"piedra\"){\r\n                                resultado = \"¡Empate!\";\r\n                            }else if(c === \"tijera\" || c === \"lagarto\"){\r\n                                resultado = \"Ganador Jugador!!\";\r\n                            }else{\r\n                                resultado = \"Ganador Computadora...\";\r\n                            }\r\n                            break;\r\n            case \"papel\":\r\n                            if(c === \"papel\"){\r\n                                resultado = \"¡Empate!\";\r\n                            }else if(c === \"piedra\" || c === \"spock\"){\r\n                                resultado = \"Ganador Jugador!\";\r\n                            }else{\r\n                                resultado = \"Ganador Computadora...\";\r\n                            }\r\n                            break;\r\n            case \"tijera\":\r\n                            if(c === \"tijera\"){\r\n                                resultado = \"¡Empate!\";\r\n                            }else if(c === \"papel\" || c === \"lagarto\"){\r\n                                resultado = \"Ganador Jugador!\";\r\n                            }else{\r\n                                resultado = \"Ganador Computadora...\";\r\n                            }\r\n                            break;\r\n            case \"lagarto\":\r\n                            if(c === \"lagarto\"){\r\n                                resultado = \"¡Empate!\";\r\n                            }else if(c === \"papel\" || c === \"spock\"){\r\n                                resultado = \"Ganador Jugador!\";\r\n                            }else{\r\n                                resultado = \"Ganador Computadora...\";\r\n                            }\r\n                            break;\r\n            case \"spock\":\r\n                            if(c === \"spock\"){\r\n                                resultado = \"¡Empate!\";\r\n                            }else if(c === \"tijera\" || c === \"piedra\"){\r\n                                resultado = \"Ganador Jugador!\";\r\n                            }else{\r\n                                resultado = \"Ganador Computadora...\";\r\n                            }\r\n                            break;\r\n            default:;\r\n        }\r\n        this.setState({ganador:resultado});\r\n        this.setState({cpu:c});\r\n        this.setState({img:this.imagenes[e]});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Computadora img={this.state.img} />\r\n                <Ganador  onClick={() => this.calcularGanador()} winner={this.state.ganador} player={this.props.player} ia={this.state.cpu} />\r\n            </div>\r\n        );\r\n    }\r\n} \r\n\r\nexport default Partida;","import React from 'react';\r\nimport './Game.css';\r\nimport selector from './img/selector.png'\r\nimport piedra from './img/piedra.png'\r\nimport papel from './img/papel.png'\r\nimport tijera from './img/tijera.png'\r\nimport lagarto from './img/lagarto.png'\r\nimport spock from './img/spock.png'\r\nimport Partida from './Componentes/Partida';\r\n\r\n\r\nclass Game extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n          jugador: \"\",\r\n          computadora: \"\",\r\n          imagen: selector,\r\n\r\n      }\r\n    }\r\n\r\n  handleClick(img,opcion){\r\n    this.setState({imagen:img});\r\n    this.setState({jugador:opcion});\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div class=\"inner-container\">\r\n          <div class=\"player\">\r\n              <h3>Jugador</h3>\r\n              <div><span class=\"rounded-sm\"><img src={this.state.imagen} alt=\"img\" width=\"20%\"/></span></div>\r\n              <button type=\"button\" class=\"btn btn-primary\" onClick={()=>this.handleClick(piedra,\"piedra\")}>Piedra</button>\r\n              <button type=\"button\" class=\"btn btn-primary\" onClick={()=>this.handleClick(papel,\"papel\")}>Papel</button>\r\n              <button type=\"button\" class=\"btn btn-primary\" onClick={()=>this.handleClick(tijera,\"tijera\")}>Tijera</button>\r\n              <button type=\"button\" class=\"btn btn-primary\" onClick={()=>this.handleClick(lagarto,\"lagarto\")}>Lagarto</button>\r\n              <button type=\"button\" class=\"btn btn-primary\" onClick={()=>this.handleClick(spock,\"spock\")}>Spock</button>\r\n          </div>\r\n          <div class=\"cpu\"><Partida player={this.state.jugador}/> </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport Reglas from './Reglas';\r\nimport Game from '../Game';\r\n\r\nfunction HomePage(){\r\n\r\n    return(\r\n        <div class=\"grid-container\">\r\n            <div class=\"item1\"><h1>Bienvenido a Piedra, Papel, Tijera, Lagarto o Spock!</h1></div>\r\n            <div class=\"item2\"><Reglas /></div>\r\n            <div class=\"item3\"><Game /> </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport HomePage from './Componentes/HomePage';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HomePage />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}